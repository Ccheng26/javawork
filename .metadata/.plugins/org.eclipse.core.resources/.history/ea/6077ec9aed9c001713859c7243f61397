package com.home.dao;

import java.sql.*;
import com.home.exception.RegistrationException;
import com.home.model.LocationAddress;
import com.home.util.OracleSqlQueries;
import com.home.util.RegUserConstants;
import com.home.bo.LocationAddressBO;

public class LocationAddressDAO {
	public LocationAddress getLocationAddress(final int user_id) throws RegistrationException {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet resultSet = null;
		LocationAddress location_address = null;
		try {
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.SELECT_LOCATION_ADDRESS);
			stmt.setInt(1, user_id);
			resultSet = stmt.executeQuery();
			if (resultSet.next()) {
				location_address = new LocationAddress();
				location_address.setLocationId(resultSet.getInt(1));
				location_address.setUserId(resultSet.getInt(2));
				location_address.setResidenceType(resultSet.getString(3));
				location_address.setAddressLine1(resultSet.getString(4));
				location_address.setAddressLine2(resultSet.getString(5));
				location_address.setCity(resultSet.getString(6));
				location_address.setState(resultSet.getString(7));
				location_address.setZip(resultSet.getString(8));
				location_address.setResidenceUse(resultSet.getString(9));
			}

			stmt.close();

		} catch (SQLException e) {
			e.printStackTrace();
			throw new RegistrationException(e.getMessage());
		} catch (Exception e) {
			e.printStackTrace();
			throw new RegistrationException(e.getMessage());
		} finally {
			try {
				resultSet.close();
				stmt.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return location_address;
	}

	public LocationAddress getOneLocationAddress(final int user_id, final int location_id)
			throws RegistrationException {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet resultSet = null;
		LocationAddress location_address = null;
		try {
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.SELECT_ONE_LOCATION_ADDRESS);
			stmt.setInt(1, user_id);
			stmt.setInt(2, location_id);
			resultSet = stmt.executeQuery();
			if (resultSet.next()) {
				location_address = new LocationAddress();
				location_address.setLocationId(resultSet.getInt(1));
				location_address.setUserId(resultSet.getInt(2));
				location_address.setResidenceType(resultSet.getString(3));
				location_address.setAddressLine1(resultSet.getString(4));
				location_address.setAddressLine2(resultSet.getString(5));
				location_address.setCity(resultSet.getString(6));
				location_address.setState(resultSet.getString(7));
				location_address.setZip(resultSet.getString(8));
				location_address.setResidenceUse(resultSet.getString(9));
			}

			stmt.close();

		} catch (SQLException e) {
			throw new RegistrationException(e.getMessage());
		} catch (Exception e) {
			throw new RegistrationException(e.getMessage());
		} finally {
			try {
				resultSet.close();
				stmt.close();
				conn.close();
			} catch (SQLException e) {
			}
		}
		return location_address;
	}

	public void saveLocationAddress(final LocationAddress location_address) throws RegistrationException {
		Connection conn = null;
		PreparedStatement stmt = null;
		System.out.println("location address saved DAO");
		try {
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.SAVE_LOCATION);

			stmt.setInt(1, location_address.getUserId());
			stmt.setString(2, location_address.getResidenceType());
			stmt.setString(3, location_address.getAddressLine1());
			stmt.setString(4, location_address.getAddressLine2());
			stmt.setString(5, location_address.getCity());
			stmt.setString(6, location_address.getState());
			stmt.setString(7, location_address.getZip());
			stmt.setString(8, location_address.getResidenceUse());

			stmt.executeUpdate();
			stmt.close();

		} catch (SQLException e) {

			throw new RegistrationException(e.getMessage());
		} catch (Exception e) {

			throw new RegistrationException(e.getMessage());
		} finally {
			try {
				stmt.close();
				conn.close();
			} catch (SQLException e) {

			}
		}
	}

	public int GetLocationid(int user_id) throws RegistrationException {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet resultSet = null;
		LocationAddress location_address = null;
		int locationId = 0;
		try {
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.GET_GENERATED_ID);
			stmt.setInt(1, user_id);

			resultSet = stmt.executeQuery();
			if (resultSet.next()) {
				locationId = resultSet.getInt(1);
			}

			stmt.close();

		} catch (SQLException e) {
			throw new RegistrationException(e.getMessage());
		} catch (Exception e) {
			throw new RegistrationException(e.getMessage());
		} finally {
			try {
				resultSet.close();
				stmt.close();
				conn.close();
			} catch (SQLException e) {
			}
		}
		return locationId;

	}

	public static void main(String[] args) throws RegistrationException {
		LocationAddress o = new LocationAddress();
		// o.setUserId(3);
		// o.setResidenceType("sjfd");
		// o.setAddressLine1("wowieur");
		// o.setAddressLine2("5");
		// o.setCity("sunnyville");
		// o.setState("CA");
		// o.setZip("56421");
		// o.setResidenceUse("rental");
		LocationAddressDAO loc = new LocationAddressDAO();
		loc.saveLocationAddress(o);
	}

}