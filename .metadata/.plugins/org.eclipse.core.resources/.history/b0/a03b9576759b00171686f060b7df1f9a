package com.home.dao;

import java.sql.*;
import java.text.ParseException;

import com.home.exception.RegistrationException;
import com.home.model.PolicyDetails;
import com.home.util.OracleSqlQueries;
import com.home.util.RegUserConstants;

public class PolicyDetailsDAO {
	private static java.sql.Date getCurrentDate() {
	    java.util.Date today = new java.util.Date();
	    return new java.sql.Date(today.getTime());
	}
	public PolicyDetails getPolicyDetails(final int location_id) throws RegistrationException
	{
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet resultSet = null;
		PolicyDetails policy_detail = null;

		try
		{
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.SELECT_POLICY_DETAILS);
			stmt.setInt(1, location_id);
			resultSet = stmt.executeQuery();
			if (resultSet.next()) {
				policy_detail = new PolicyDetails();
				policy_detail.setUserId(resultSet.getInt(1));
				policy_detail.setQuoteId(resultSet.getInt(2));
				policy_detail.setLocationId(resultSet.getInt(3));
				policy_detail.setPolicyStart(resultSet.getString(4));
				policy_detail.setPolicyEnd(resultSet.getString(5));
				policy_detail.setPolicyTerm(resultSet.getInt(6));
				policy_detail.setPolicyStatus(resultSet.getString(7));
			}
			stmt.close();
			
		}
		catch (SQLException e)
		{
			throw new RegistrationException(e.getMessage());
		}
		catch(Exception e)
		{
			throw new RegistrationException(e.getMessage());
		} 
		finally
		{
			try
			{
				resultSet.close();
				stmt.close();
				conn.close();
			}
			catch (SQLException e)
			{
			}
		}
		return policy_detail;
	}

public void savePolicyDetails(final PolicyDetails policy_detail) throws RegistrationException
	{
		Connection conn = null;
		PreparedStatement stmt = null;
		try
		{
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.SAVE_POLICY_DETAILS);
			
			stmt.setInt(1, policy_detail.getUserId());
			stmt.setInt(2, policy_detail.getQuoteId());
			stmt.setInt(3, policy_detail.getLocationId());
			stmt.setDate(4, (Date) policy_detail.getPolicyStart());
			stmt.setDate(5, (Date) policy_detail.getPolicyEnd());
			stmt.setInt(6,policy_detail.getPolicyTerm());
			stmt.setString(7,policy_detail.getPolicyStatus());

			stmt.executeUpdate();
			stmt.close();
		}
		catch (SQLException e)
		{
			throw new RegistrationException(e.getMessage());
		}
		catch(Exception e)
		{
			throw new RegistrationException(e.getMessage());
		} 
		finally
		{
			try
			{
				stmt.close();
				conn.close();
			}
			catch (SQLException e)
			{
				
			}
		}
	}

public void cancelPolicyDetails(final int policy_id) throws RegistrationException
{
	Connection conn = null;
	PreparedStatement stmt = null;
	try
	{
		final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
		conn = daoFactory.getConnection();
		stmt = conn.prepareStatement(OracleSqlQueries.CANCEL_POLICY_DETAILS);
		stmt.setInt(1, policy_id);
		//stmt.setInt(1, policy_detail.getPolicyId());
		
		stmt.executeUpdate();
		stmt.close();
	}
	catch (SQLException e)
	{
		throw new RegistrationException(e.getMessage());
	}
	catch(Exception e)
	{
		throw new RegistrationException(e.getMessage());
	} 
	finally
	{
		try
		{
			stmt.close();
			conn.close();
		}
		catch (SQLException e)
		{
			
		}
	}
 }
public void renewPolicyDetails(final int policy_id) throws RegistrationException
{
	Connection conn = null;
	PreparedStatement stmt = null;
	try
	{
		final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
		conn = daoFactory.getConnection();
		stmt = conn.prepareStatement(OracleSqlQueries.RENEW_POLICY_DETAILS);
		stmt.setInt(1, policy_id);
		//stmt.setInt(1, policy_detail.getPolicyId());
		
		stmt.executeUpdate();
		stmt.close();
	}
	catch (SQLException e)
	{
		throw new RegistrationException(e.getMessage());
	}
	catch(Exception e)
	{
		throw new RegistrationException(e.getMessage());
	} 
	finally
	{
		try
		{
			stmt.close();
			conn.close();
		}
		catch (SQLException e)
		{
			
		}
	}
 }
 	public static void main(String[] args) throws RegistrationException, ParseException {
		PolicyDetails o = new PolicyDetails();
		o.setUserId(10);
		o.setQuoteId(15);
		o.setLocationId(15);
		o.setPolicyStart("2017-01-11");
		o.setPolicyEnd("2017-02-11");
		o.setPolicyTerm(13);
		o.setPolicyStatus("active");
		PolicyDetailsDAO pol = new PolicyDetailsDAO();
		pol.savePolicyDetails(o);
	}

}

