package com.home.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import com.home.bo.LocationAddressBO;
import com.home.bo.PropertyDetailBO;
import com.home.bo.QuoteDetailBO;
import com.home.exception.RegistrationException;
import com.home.model.QuoteDetails;
import com.home.util.OracleSqlQueries;
import com.home.util.RegUserConstants;
import com.home.model.PropertyDetails;
import com.home.model.LocationAddress;

public class QuoteDetailDAO {
	private static java.sql.Date getCurrentDate() {
		java.util.Date today = new java.util.Date();
		return new java.sql.Date(today.getTime());
	}
	QuoteDetailBO quoteBO= new QuoteDetailBO();
	public QuoteDetails getQuoteDetails(final int user_id) throws RegistrationException {
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet resultSet = null;
		QuoteDetails quote = null;

		List<QuoteDetails> quoteList;
		
		try {
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.SELECT_QUOTE);
			stmt.setInt(1, user_id);
			resultSet = stmt.executeQuery();

			//quoteList = new ArrayList<QuoteDetails>();
			if (resultSet.next()) {
				quote = new QuoteDetails();
				quote.setQuoteId(resultSet.getInt(1));
				quote.setLocationId(resultSet.getInt(2));
				quote.setUserId(resultSet.getInt(3));
				quote.setMonthlyPremium(resultSet.getDouble(4));
				quote.setDwellingCoverage(resultSet.getDouble(5));
				quote.setDetachedStructures(resultSet.getDouble(6));
				quote.setPersonalProperty(resultSet.getDouble(7));
				quote.setLivingExpense(resultSet.getDouble(8));
				quote.setMedExp(resultSet.getDouble(9));
				quote.setDeductible(resultSet.getDouble(10));
				quote.setIssueDate(resultSet.getString(11));
				System.out.println("setters being called");
				//quoteList.add(quote);
				stmt.executeUpdate();
				stmt.close();
			}			
		} catch (SQLException e) {
			e.printStackTrace();
			throw new RegistrationException(e.getMessage());
		} catch (Exception e) {
			e.printStackTrace();
			throw new RegistrationException(e.getMessage());
		} finally {
			try {
				resultSet.close();
				stmt.close();
				conn.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return quote;
	}
public void savePropertyDetails(final PropertyDetails property_information) throws RegistrationException {
		System.out.println("inside saving the property");
		Connection conn = null;
		PreparedStatement stmt = null;
		try {
			final AbstractDAOFactory daoFactory = AbstractDAOFactory.getDaoFactory(RegUserConstants.ORACLE);
			conn = daoFactory.getConnection();
			stmt = conn.prepareStatement(OracleSqlQueries.SAVE_PROPERTY_DETAILS);
			stmt.setInt(1, property_information.getUserId());
			stmt.setInt(2, property_information.getLocationId());
			stmt.setInt(3, property_information.getMarketValue());
			stmt.setInt(4, quote.getYearBuilt());
			stmt.setDouble(5, quote.getSqft());
			stmt.setString(6, quote.getDwellStyle());
			stmt.setString(7, quote.getRoofMaterial());
			stmt.setString(8, quote.getGarageType());
			stmt.setInt(9, quote.getNumFullBath());
			stmt.setInt(10, quote.getNumHalfBath());
			stmt.setString(11, quote.getHasPool());
			stmt.executeUpdate();
			stmt.close();
			System.out.println("finished saving the property");
		} catch (SQLException e) {
			throw new RegistrationException(e.getMessage());
		} catch (Exception e) {
			throw new RegistrationException(e.getMessage());
		} finally {
			try {
				stmt.close();
				conn.close();
			} catch (SQLException e) {

			}
		}
	}

	public static void main(String[] args) throws RegistrationException, ParseException {
//		LocationAddressBO loc = new LocationAddressBO();
//		LocationAddress locale = loc.getLocationAddress(1);
//
//		PropertyDetailBO i = new PropertyDetailBO();
//		PropertyDetails property = i.getLocationId(1);
//		QuoteDetails o = new QuoteDetails();
//		o.setQuoteId(1);
//		o.setLocationId(1);
//		o.setUserId(1);
//		o.setMonthlyPremium(1000);
//		o.setDwellingCoverage(10025);
//		o.setDetachedStructures(50);
//		o.setPersonalProperty(150);
//		o.setLivingExpense(555);
//		o.setMedExp(200);
//		o.setDeductible(59);
//		o.setIssueDate("1982-05-01");
//		QuoteDetailDAO newq = new QuoteDetailDAO();
//		newq.saveQuoteDetails(o,property, locale);
		// loc.getQuoteDetails(2).getMonthlyPremium();
	}

}
